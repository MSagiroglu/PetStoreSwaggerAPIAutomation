package requests.storeAPIRequests;

import com.aventstack.extentreports.ExtentReports;
import com.aventstack.extentreports.ExtentTest;
import com.aventstack.extentreports.reporter.ExtentHtmlReporter;
import com.github.javafaker.Faker;
import io.restassured.http.ContentType;
import io.restassured.response.Response;
import org.testng.annotations.Test;
import pojos.storePojos.OrderPojo;

import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;

import static base_url.PetStoreApiBaseUrl.spec;
import static utilities.ExtentReport.*;

public class OrderPOSTRequest {
    public static ExtentReports extent;
    public static ExtentTest test;
    public static ExtentHtmlReporter htmlReporter;
    static Faker faker = new Faker();
    static Long orderId = faker.number().randomNumber();
    static Long petId = faker.number().randomNumber();
    static int quantity = faker.number().randomDigit();
    static LocalDateTime now = LocalDateTime.now();
    static DateTimeFormatter formatter = DateTimeFormatter.ISO_DATE_TIME;
    static String shipDate = now.format(formatter);
    static String status = "placed";
    static boolean complete = true;

    @Test()
    public static void orderPOSTRequest() {
        // 1- Set the URL
        bilgiNotu("URL Ayarlandi");
        spec.pathParams("first", "store", "second", "order");

        // 2- Set the expected data
        bilgiNotu("Expected Data Ayarlandi");
        OrderPojo payload = new OrderPojo(orderId, petId, quantity, shipDate, status, complete);

        // 3- Send the request and get the response
        bilgiNotu("Request Gonderildi");
        Response response = spec.body(payload).contentType(ContentType.JSON).when().post("{first}/{second}");
        response.prettyPrint();

        // 4- Verify the response
        bilgiNotu("Response kodu dogrulandÄ±");

    }
}
